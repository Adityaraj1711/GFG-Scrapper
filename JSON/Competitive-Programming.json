{
    "A Better Way To Approach Competitive Programming": "https://www.geeksforgeeks.org/overcoming-common-problems-in-competitive-programming/",
    "AKS Primality Test": "https://www.geeksforgeeks.org/aks-primality-test/",
    "Algorithm Library | C++ Magicians STL Algorithm": "https://www.geeksforgeeks.org/c-magicians-stl-algorithms/",
    "Array algorithms in C++ STL (all_of, any_of, none_of, copy_n and iota)": "https://www.geeksforgeeks.org/useful-array-algorithms-in-c-stl/",
    "Array range queries over range queries": "https://www.geeksforgeeks.org/array-range-queries-range-queries/",
    "Array with GCD of any of its subset belongs to the given array": "https://www.geeksforgeeks.org/array-gcd-subset-belongs-given-array/",
    "BFS using STL for competitive coding": "https://www.geeksforgeeks.org/bfs-using-stl-competitive-coding/",
    "Bit Tricks for Competitive Programming": "https://www.geeksforgeeks.org/bit-tricks-competitive-programming/",
    "Bits manipulation (Important tactics)": "https://www.geeksforgeeks.org/bits-manipulation-important-tactics/",
    "Bitwise Hacks for Competitive Programming": "https://www.geeksforgeeks.org/bitwise-hacks-for-competitive-programming/",
    "Burst Balloon to maximize coins": "https://www.geeksforgeeks.org/burst-balloon-to-maximize-coins/",
    "C qsort() vs C++ sort()": "https://www.geeksforgeeks.org/c-qsort-vs-c-sort/",
    "C++ tricks for competitive programming (for C++ 11)": "https://www.geeksforgeeks.org/c-tricks-competitive-programming-c-11/",
    "C++: Methods of code shortening in competitive programming": "https://www.geeksforgeeks.org/c-methods-of-code-shortening-in-competitive-programming/",
    "Check if a M-th fibonacci number divides N-th fibonacci number": "https://www.geeksforgeeks.org/check-if-a-m-th-fibonacci-number-divides-n-th-fibonacci-number/",
    "Check if any permutation of a large number is divisible by 8": "https://www.geeksforgeeks.org/check-if-any-permutation-of-a-large-number-is-divisible-by-8/",
    "Check if concatenation of two strings is balanced or not": "https://www.geeksforgeeks.org/check-if-concatenation-of-two-strings-is-balanced-or-not/",
    "Check if it is possible to convert one string into another with given constraints": "https://www.geeksforgeeks.org/check-if-it-is-possible-to-convert-one-string-into-another/",
    "Check if the large number formed is divisible by 41 or not": "https://www.geeksforgeeks.org/check-if-the-number-is-divisible-by-41-or-not-when-first-two-digits-are-given/",
    "Check if the last element of array is even or odd after performing a operation p times": "https://www.geeksforgeeks.org/check-last-element-array-even-odd-performing-operation-p-times/",
    "Cin-Cout vs Scanf-Printf": "https://www.geeksforgeeks.org/cincout-vs-scanfprintf/",
    "Cleaning the room": "https://www.geeksforgeeks.org/cleaning-the-room/",
    "Combinatorics on ordered trees": "https://www.geeksforgeeks.org/combinatorics-ordered-trees/",
    "Common mistakes to be avoided in Competitive Programming in C++ | Beginners": "https://www.geeksforgeeks.org/common-mistakes-avoided-competitive-programming-c-beginners/",
    "Competitive Programming: Conquering a given problem": "https://www.geeksforgeeks.org/competitive-programming-conquering-a-given-problem/",
    "Container with Most Water": "https://www.geeksforgeeks.org/container-with-most-water/",
    "Count inversions of size k in a given array": "https://www.geeksforgeeks.org/count-inversions-of-size-k-in-a-given-array/",
    "Count number of primes in an array": "https://www.geeksforgeeks.org/count-number-of-primes-in-an-array/",
    "Count number of right triangles possible with a given perimeter": "https://www.geeksforgeeks.org/count-number-of-right-triangles-possible-with-a-given-perimeter/",
    "Count strings with consonants and vowels at alternate position": "https://www.geeksforgeeks.org/count-strings-with-consonants-and-vowels-at-alternate-position/",
    "Count unique subsequences of length K": "https://www.geeksforgeeks.org/count-unique-subsequences-of-length-k/",
    "Data Type Ranges and their macros in C++": "https://www.geeksforgeeks.org/data-type-ranges-and-their-macros-in-c/",
    "Difference between the summation of numbers whose frequency of all digits are same and different": "https://www.geeksforgeeks.org/difference-between-the-summation-of-numbers-whose-frequency-of-all-digits-are-same-and-different/",
    "Digit DP | Introduction": "https://www.geeksforgeeks.org/digit-dp-introduction/",
    "Distinct Prime Factors of Array  Product": "https://www.geeksforgeeks.org/distinct-prime-factors-of-array-product/",
    "Dynamic Disjoint Set Data Structure for large range values": "https://www.geeksforgeeks.org/dynamic-disjoint-set-data-structure-for-large-range-values/",
    "Dynamic Programming | Wildcard Pattern Matching  | Linear Time and Constant Space": "https://www.geeksforgeeks.org/dynamic-programming-wildcard-pattern-matching-linear-time-constant-space/",
    "Element which occurs consecutively in a given subarray more than or equal to K times": "https://www.geeksforgeeks.org/element-which-occurs-consecutively-in-a-given-subarray-more-than-or-equal-to-k-times/",
    "Euler tour of Binary Tree": "https://www.geeksforgeeks.org/euler-tour-binary-tree/",
    "Extended Mo’s Algorithm with ≈ O(1) time complexity": "https://www.geeksforgeeks.org/extended-mos-algorithm-o1-time-complexity/",
    "Fast I/O for Competitive Programming": "https://www.geeksforgeeks.org/fast-io-for-competitive-programming/",
    "Fast I/O in Java in Competitive Programming": "https://www.geeksforgeeks.org/fast-io-in-java-in-competitive-programming/",
    "Find (a^b)%m where ‘b’ is very large": "https://www.geeksforgeeks.org/find-abm-where-b-is-very-large/",
    "Find Nth term (A matrix exponentiation example)": "https://www.geeksforgeeks.org/find-nth-term-a-matrix-exponentiation-example/",
    "Find if it is possible to reach the end through given transitions": "https://www.geeksforgeeks.org/find-possible-reach-end-given-transitions/",
    "Find if neat arrangement of cups and shelves can be made": "https://www.geeksforgeeks.org/find-neat-arrangement-cups-shelves-can-made/",
    "Find the Largest Cube formed by Deleting minimum Digits from a number": "https://www.geeksforgeeks.org/find-largest-cube-formed-deleting-minimum-digits-number/",
    "Find the arrangement of queue at given time": "https://www.geeksforgeeks.org/find-arrangement-queue-given-time/",
    "Find the minimum time after which one can exchange notes": "https://www.geeksforgeeks.org/find-minimum-time-one-can-exchange-notes/",
    "Find the number of operations required to make all array elements Equal": "https://www.geeksforgeeks.org/find-the-number-of-operations-required-to-make-all-array-elements-equal/",
    "Find two numbers from their sum and XOR": "https://www.geeksforgeeks.org/find-two-numbers-sum-xor/",
    "First occurrence of a digit in a given fraction": "https://www.geeksforgeeks.org/first-occurrence-of-a-digit-in-a-given-fraction/",
    "Formatted output in Java": "https://www.geeksforgeeks.org/formatted-output-in-java/",
    "Frequency Measuring Techniques for Competitive Programming": "https://www.geeksforgeeks.org/frequency-measurement-techniques-for-competitive-programming/",
    "Generating Test Cases (generate() and generate_n() in C++)": "https://www.geeksforgeeks.org/generating-test-cases-generate-and-generate_n-in-c/",
    "Graph implementation using STL for competitive programming | Set 1 (DFS of Unweighted and Undirected)": "https://www.geeksforgeeks.org/graph-implementation-using-stl-for-competitive-programming-set-1-dfs-of-unweighted-and-undirected/",
    "Graph implementation using STL for competitive programming | Set 2 (Weighted graph)": "https://www.geeksforgeeks.org/graph-implementation-using-stl-for-competitive-programming-set-2-weighted-graph/",
    "How can competitive programming help you get a job?": "https://www.geeksforgeeks.org/how-can-competitive-programming-help-you-get-a-job/",
    "How to become a master in competitive programming?": "https://www.geeksforgeeks.org/how-to-become-a-master-in-competitive-programming/",
    "How to begin with Competitive Programming?": "https://www.geeksforgeeks.org/how-to-begin-with-competitive-programming/",
    "How to get rid of Java TLE problem": "https://www.geeksforgeeks.org/how-to-get-rid-of-java-tle-problem/",
    "How to overcome Time Limit Exceed(TLE)?": "https://www.geeksforgeeks.org/overcome-time-limit-exceedtle/",
    "How to prepare for ACM – ICPC?": "https://www.geeksforgeeks.org/how-to-prepare-for-acm-icpc/",
    "How to prepare for Facebook Hacker Cup?": "https://www.geeksforgeeks.org/prepare-facebook-hacker-cup/",
    "How to prepare for Google Asia Pacific University (APAC) Test ?": "https://www.geeksforgeeks.org/how-to-prepare-for-google-asia-pacific-university-test/",
    "How to read Competitive Programming Questions?": "https://www.geeksforgeeks.org/how-to-read-competitive-programming-questions/",
    "How to read content of GeeksforGeeks in an organized way?": "https://www.geeksforgeeks.org/how-to-read-content-of-geeksforgeeks-in-an-organized-way/",
    "Inclusion Exclusion principle and programming applications": "https://www.geeksforgeeks.org/inclusion-exclusion-principle-and-programming-applications/",
    "Input/Output from external file in C/C++, Java and Python for Competitive Programming": "https://www.geeksforgeeks.org/inputoutput-external-file-cc-java-python-competitive-programming/",
    "Input/Output from external file in C/C++, Java and Python for Competitive Programming | Set 2": "https://www.geeksforgeeks.org/inputoutput-external-file-cc-java-python-competitive-programming-set-2/",
    "Introduction to Programming Languages": "https://www.geeksforgeeks.org/introduction-to-programming-languages/",
    "Java tricks for competitive programming (for Java 8)": "https://www.geeksforgeeks.org/java-tricks-competitive-programming-java-8/",
    "Knowing the complexity in competitive programming": "https://www.geeksforgeeks.org/knowing-the-complexity-in-competitive-programming/",
    "LCA for general or n-ary trees  (Sparse Matrix DP approach < O(nlogn), O(logn)>)": "https://www.geeksforgeeks.org/lca-for-general-or-n-ary-trees-sparse-matrix-dp-approach-onlogn-ologn/",
    "Largest connected component on a grid": "https://www.geeksforgeeks.org/largest-connected-component-on-a-grid/",
    "Largest number with one swap allowed": "https://www.geeksforgeeks.org/largest-number-with-one-swap-allowed/",
    "Longest substring having K distinct vowels": "https://www.geeksforgeeks.org/longest-substring-having-k-distinct-vowels/",
    "Making elements of two arrays same with minimum increment/decrement": "https://www.geeksforgeeks.org/making-elements-of-two-arrays-same-with-minimum-incrementdecrement/",
    "Matrix Exponentiation": "https://www.geeksforgeeks.org/matrix-exponentiation/",
    "Maximize the bitwise OR of an array": "https://www.geeksforgeeks.org/maximize-the-bitwise-or-of-an-array/",
    "Maximize the number of segments of length p, q and r": "https://www.geeksforgeeks.org/maximize-the-number-of-segments-of-length-p-q-and-r/",
    "Maximize the total profit of all the persons": "https://www.geeksforgeeks.org/maximize-the-total-profit-of-all-the-persons/",
    "Maximum Possible Product in Array after performing given Operations": "https://www.geeksforgeeks.org/maximum-possible-product-in-array-after-performing-given-operations/",
    "Maximum difference between groups of size two": "https://www.geeksforgeeks.org/maximum-difference-groups-size-two/",
    "Maximum elements that can be made equal with k updates": "https://www.geeksforgeeks.org/maximum-elements-can-made-equal-k-updates/",
    "Maximum number of customers that can be satisfied with given quantity": "https://www.geeksforgeeks.org/maximum-number-customers-can-satisfied-given-quantity/",
    "Maximum sum increasing subsequence from a prefix and a given element after prefix is must": "https://www.geeksforgeeks.org/maximum-sum-increasing-subsequence-from-a-prefix-and-a-given-element-after-prefix-is-must/",
    "Minimum adjacent swaps to move maximum and minimum to corners": "https://www.geeksforgeeks.org/minimum-adjacent-swaps-to-move-maximum-and-minimum-to-corners/",
    "Minimum cost path from source node to destination node via an intermediate node": "https://www.geeksforgeeks.org/minimum-cost-path-from-source-node-to-destination-node-via-an-intermediate-node/",
    "Minimum difference between groups of size two": "https://www.geeksforgeeks.org/minimum-difference-between-groups-of-size-two/",
    "Minimum digits to remove to make a number Perfect Square": "https://www.geeksforgeeks.org/required-minimum-digits-remove-number-make-perfect-square/",
    "Minimum number of elements to be removed to make XOR  maximum": "https://www.geeksforgeeks.org/minimum-number-of-elements-to-be-removed-to-make-xor-maximum/",
    "Minimum number using set bits of a given number": "https://www.geeksforgeeks.org/minimum-number-using-set-bits-given-number/",
    "Minimum operations required to make all the elements distinct in an array": "https://www.geeksforgeeks.org/minimum-operations-required-to-make-all-the-elements-distinct-in-an-array/",
    "Minimum steps to reach end from start by performing multiplication and mod operations with array elements": "https://www.geeksforgeeks.org/minimum-steps-to-reach-end-from-start-by-performing-multiplication-and-mod-operations-with-array-elements/",
    "Minimum total cost incurred to reach the last station": "https://www.geeksforgeeks.org/minimum-total-cost-incurred-to-reach-the-last-station/",
    "Modulo 10^9+7 (1000000007)": "https://www.geeksforgeeks.org/modulo-1097-1000000007/",
    "Modulo power for large numbers represented as strings": "https://www.geeksforgeeks.org/modulo-power-for-large-numbers-represented-as-strings/",
    "Multi Source Shortest Path in Unweighted Graph": "https://www.geeksforgeeks.org/multi-source-shortest-path-in-unweighted-graph/",
    "Multistage Graph (Shortest Path)": "https://www.geeksforgeeks.org/multistage-graph-shortest-path/",
    "NZEC error in Python": "https://www.geeksforgeeks.org/nzec-error-python/",
    "Nth non-Square number": "https://www.geeksforgeeks.org/nth-non-square-number/",
    "Number of Larger Elements on right side  in a string": "https://www.geeksforgeeks.org/number-of-larger-elements-on-right-side-in-a-string/",
    "Number of Transpositions in a Permutation": "https://www.geeksforgeeks.org/number-of-transpositions-in-a-permutation/",
    "Number of days until all chocolates become unhealthy": "https://www.geeksforgeeks.org/number-of-days-until-all-chocolates-become-unhealthy/",
    "Number of digits in N factorial to the power N": "https://www.geeksforgeeks.org/number-digits-n-factorial-power-n/",
    "Number of digits in the nth number made of given four digits": "https://www.geeksforgeeks.org/number-digits-nth-number-made-given-four-digits/",
    "Number of distinct prime factors of first n natural numbers": "https://www.geeksforgeeks.org/number-of-distinct-prime-factors-of-first-n-natural-numbers/",
    "Number of elements greater than K in the range L to R using Fenwick Tree (Offline queries)": "https://www.geeksforgeeks.org/number-of-elements-greater-than-k-in-the-range-l-to-r-using-fenwick-tree-offline-queries/",
    "Number of horizontal or vertical line segments to connect 3 points": "https://www.geeksforgeeks.org/find-no-segments-polyline/",
    "Number of integral solutions for equation x = b*(sumofdigits(x)^a)+c": "https://www.geeksforgeeks.org/number-of-integral-solutions-for-equation-x-bsumofdigitsxac/",
    "Number of odd and even results for every value of x in range [min, max] after performing N steps": "https://www.geeksforgeeks.org/number-of-odd-and-even-results-for-every-value-of-x-in-range-min-max-after-performing-n-steps/",
    "Number of prime pairs in an array": "https://www.geeksforgeeks.org/number-of-prime-pairs-in-an-array/",
    "Number of quadrilaterals possible from the given points": "https://www.geeksforgeeks.org/number-of-quadrilaterals-possible-from-the-given-points/",
    "Number of terms in Geometric Series with given conditions": "https://www.geeksforgeeks.org/number-of-terms-in-geometric-series-with-given-conditions/",
    "Number of ways to change the XOR of two numbers by swapping the bits": "https://www.geeksforgeeks.org/number-of-ways-to-change-the-xor-of-two-numbers-by-swapping-the-bits/",
    "Ordered Set and GNU C++ PBDS": "https://www.geeksforgeeks.org/ordered-set-gnu-c-pbds/",
    "Pair of arrays with equal sum after removing exactly one element from each": "https://www.geeksforgeeks.org/pair-of-arrays-with-equal-sum-after-removing-exactly-one-element-from-each/",
    "Pair with minimum absolute difference after solving each query": "https://www.geeksforgeeks.org/pair-with-minimum-absolute-difference-after-solving-each-query/",
    "Pairs involved in Balanced Parentheses": "https://www.geeksforgeeks.org/pairs-involved-balanced-parentheses/",
    "Pairs with GCD equal to one in the given range": "https://www.geeksforgeeks.org/pairs-with-gcd-equal-to-one-in-the-given-range/",
    "Palindromic Tree | Introduction & Implementation": "https://www.geeksforgeeks.org/palindromic-tree-introduction-implementation/",
    "Passing the Assignment": "https://www.geeksforgeeks.org/passing-the-assignment/",
    "Permutation of a string with maximum number of characters greater than its adjacent characters": "https://www.geeksforgeeks.org/permutation-of-a-string-with-maximum-number-of-characters-greater-than-its-adjacent-characters/",
    "Possible timings": "https://www.geeksforgeeks.org/possible-timings/",
    "Practice for cracking any coding interview": "https://www.geeksforgeeks.org/practice-for-cracking-any-coding-interview/",
    "Prefix Sum Array – Implementation and Applications in Competitive Programming": "https://www.geeksforgeeks.org/prefix-sum-array-implementation-applications-competitive-programming/",
    "Print all subsequences of a string | Iterative Method": "https://www.geeksforgeeks.org/print-subsequences-string-iterative-method/",
    "Program to find last two digits of 2^n": "https://www.geeksforgeeks.org/program-to-find-last-two-digits-of-2n/",
    "Project Euler": "https://www.geeksforgeeks.org/project-euler/",
    "Python Input Methods for Competitive Programming": "https://www.geeksforgeeks.org/python-input-methods-competitive-programming/",
    "Python Tricks for Competitive Coding": "https://www.geeksforgeeks.org/python-tricks-competitive-coding/",
    "Python in Competitive Programming": "https://www.geeksforgeeks.org/python-in-competitive-programming/",
    "Queries to find distance between two nodes of a Binary tree": "https://www.geeksforgeeks.org/queries-find-distance-two-nodes-binary-tree/",
    "Queries to find distance between two nodes of a Binary tree  – O(logn) method": "https://www.geeksforgeeks.org/queries-find-distance-two-nodes-binary-tree-ologn-method/",
    "Queries to find maximum product pair in range with updates": "https://www.geeksforgeeks.org/queries-to-find-maximum-product-pair-in-range-with-updates/",
    "Querying the number of distinct colors in a subtree of a colored tree using BIT": "https://www.geeksforgeeks.org/querying-the-number-of-distinct-colors-in-a-subtree-of-a-colored-tree-using-bit/",
    "Quick ways to check for Prime and find next Prime in Java": "https://www.geeksforgeeks.org/quick-ways-to-check-for-prime-and-find-next-prime-in-java/",
    "Range Minimum Query (Square Root Decomposition and Sparse Table)": "https://www.geeksforgeeks.org/range-minimum-query-for-static-array/",
    "Remove the forbidden strings": "https://www.geeksforgeeks.org/remove-forbidden-strings/",
    "Represent a number as sum of minimum possible psuedobinary numbers": "https://www.geeksforgeeks.org/represent-number-sum-minimum-possible-psuedobinary-numbers/",
    "Searching in a map using std::map functions in C++": "https://www.geeksforgeeks.org/searching-map-using-stdmap-functions-c/",
    "Sequence Alignment  problem": "https://www.geeksforgeeks.org/sequence-alignment-problem/",
    "Smallest number with sum of digits as N and divisible by 10^N": "https://www.geeksforgeeks.org/smallest-number-sum-digits-n-divisible-10n/",
    "Some important shortcuts in Competitive Programming": "https://www.geeksforgeeks.org/important-shortcuts-competitive-programming/",
    "Sqrt (or Square Root) Decomposition Technique  |  Set 1 (Introduction)": "https://www.geeksforgeeks.org/sqrt-square-root-decomposition-technique-set-1-introduction/",
    "Sqrt (or Square Root) Decomposition | Set 2 (LCA of Tree in O(sqrt(height)) time)": "https://www.geeksforgeeks.org/sqrt-square-root-decomposition-set-2-lca-tree-osqrth-time/",
    "String transformation using XOR and OR": "https://www.geeksforgeeks.org/string-transformation-using-xor-and-or/",
    "Sum of all prime divisors of all the numbers in range L-R": "https://www.geeksforgeeks.org/sum-of-all-prime-divisors-of-all-the-numbers-in-range-l-r/",
    "Sum of decimal equivalent of all possible pairs of Binary representation of a Number": "https://www.geeksforgeeks.org/sum-of-decimal-equivalent-of-all-possible-pairs-of-binary-representation-of-a-number/",
    "Sum of elements in range L-R where first half and second half is filled with odd and even numbers": "https://www.geeksforgeeks.org/sum-of-elements-in-range-l-r-where-first-half-and-second-half-is-filled-with-odd-and-even-numbers/",
    "Sum of elements of all partitions of number such that no element is less than K": "https://www.geeksforgeeks.org/sum-of-elements-of-all-partitions-of-number-such-that-no-element-is-less-than-k/",
    "Sum of f(a[i], a[j]) over all pairs in an array of n integers": "https://www.geeksforgeeks.org/sum-fai-aj-pairs-array-n-integers/",
    "Sum of range in a series of first odd then even natural numbers": "https://www.geeksforgeeks.org/sum-of-range-in-a-series-of-first-odd-then-even-natural-numbers/",
    "Test Case Generation | Set 1 (Random Numbers, Arrays and Matrices)": "https://www.geeksforgeeks.org/test-case-generation-set-1-random-numbers-arrays-and-matrices/",
    "Test Case Generation | Set 2 (Random Characters, Strings and Arrays of Random Strings)": "https://www.geeksforgeeks.org/test-case-generation-set-2-random-characters-strings-and-arrays-of-random-strings/",
    "Test Case Generation | Set 3 (Unweighted and Weighted Trees)": "https://www.geeksforgeeks.org/test-case-generation-set-3-unweighted-and-weighted-trees/",
    "Test Case Generation | Set 4 (Random directed / undirected weighted and unweighted Graphs)": "https://www.geeksforgeeks.org/test-case-generation-set-4-random-directed-undirected-weighted-and-unweighted-graphs/",
    "Test Case Generation | Set 5 (Generating random Sorted Arrays and Palindromes)": "https://www.geeksforgeeks.org/test-case-generation-set-5-generating-random-sorted-arrays-palindromes/",
    "The Google Foo Bar Challenge": "https://www.geeksforgeeks.org/google-foo-bar-challenge/",
    "The painter’s partition problem |  Set 2": "https://www.geeksforgeeks.org/painters-partition-problem-set-2/",
    "Tiling with Dominoes": "https://www.geeksforgeeks.org/tiling-with-dominoes/",
    "Tips and Tricks for Competitive Programmers | Set 1 (For Beginners)": "https://www.geeksforgeeks.org/tips-and-tricks-for-competitive-programmers-set-1-for-beginners/",
    "Tips and Tricks for Competitive Programmers | Set 2 (Language to be used for Competitive Programming)": "https://www.geeksforgeeks.org/tips-and-tricks-for-competitive-programmers-set-2-which-language-should-be-used-for-competitive-programming/",
    "Top 10 Algorithms and Data Structures for Competitive Programming": "https://www.geeksforgeeks.org/top-algorithms-and-data-structures-for-competitive-programming/",
    "Traversal of tree with k jumps allowed between nodes of same height": "https://www.geeksforgeeks.org/traversal-tree-ability-jump-nodes-height/",
    "Trick for modular division ( (x1 * x2 …. xn) / b ) mod (m)": "https://www.geeksforgeeks.org/trick-modular-division-x1x2-xnbmodm/",
    "Triplet with no element divisible by 3 and sum N": "https://www.geeksforgeeks.org/triplet-with-no-element-divisible-by-3-and-sum-n/",
    "Two Dimensional Segment Tree | Sub-Matrix Sum": "https://www.geeksforgeeks.org/two-dimensional-segment-tree-sub-matrix-sum/",
    "Using Chinese Remainder Theorem to Combine Modular equations": "https://www.geeksforgeeks.org/using-chinese-remainder-theorem-combine-modular-equations/",
    "Vantieghems Theorem for Primality Test": "https://www.geeksforgeeks.org/vantieghems-theorem-primality-test/",
    "Variation in Nim Game": "https://www.geeksforgeeks.org/variation-nim-game/",
    "Water Connection Problem": "https://www.geeksforgeeks.org/water-connection-problem/",
    "Water drop problem": "https://www.geeksforgeeks.org/water-drop-problem/",
    "What coding habits improve timing in coding contest?": "https://www.geeksforgeeks.org/what-coding-habits-improve-timing-in-coding-contest/",
    "What to do at the time of Wrong Answer (WA)?": "https://www.geeksforgeeks.org/time-wrong-answer-wa/",
    "Why is programming important for first year or school students?": "https://www.geeksforgeeks.org/why-is-programming-important-for-first-year-or-school-students/",
    "Why is python best suited for Competitive Coding?": "https://www.geeksforgeeks.org/python-best-suited-competitive-coding/",
    "Writing C/C++ code efficiently in Competitive programming": "https://www.geeksforgeeks.org/writing-cc-code-efficiently-in-competitive-programming/",
    "Writing code faster in C++ STL": "https://www.geeksforgeeks.org/writing-code-faster-in-c-stl/",
    "getchar_unlocked() – faster input in C/C++ for Competitive Programming": "https://www.geeksforgeeks.org/getchar_unlocked-faster-input-cc-competitive-programming/"
}